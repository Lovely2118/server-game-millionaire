"""Init database

Revision ID: f518f06ac74d
Revises: 
Create Date: 2022-10-16 15:48:35.952233

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f518f06ac74d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('levels',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('level', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_levels')),
    sa.UniqueConstraint('level', name=op.f('uq_levels_level'))
    )
    op.create_index(op.f('ix_levels_id'), 'levels', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('money', sa.Float(), nullable=True),
    sa.Column('number_block', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
    sa.UniqueConstraint('name', name=op.f('uq_users_name')),
    sa.UniqueConstraint('user_id', name=op.f('uq_users_user_id'))
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('blocks',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('question', sa.String(), nullable=False),
    sa.Column('right_answer', sa.Integer(), nullable=False),
    sa.Column('cost', sa.Integer(), nullable=False),
    sa.Column('level_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['level_id'], ['levels.id'], name=op.f('fk_blocks_level_id_levels')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_blocks'))
    )
    op.create_index(op.f('ix_blocks_id'), 'blocks', ['id'], unique=False)
    op.create_table('answers',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('answer', sa.String(), nullable=False),
    sa.Column('block_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['block_id'], ['blocks.id'], name=op.f('fk_answers_block_id_blocks')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_answers')),
    sa.UniqueConstraint('answer', name=op.f('uq_answers_answer'))
    )
    op.create_index(op.f('ix_answers_id'), 'answers', ['id'], unique=False)
    op.create_table('user_and_block_model',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('block_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['block_id'], ['blocks.id'], name=op.f('fk_user_and_block_model_block_id_blocks')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_user_and_block_model_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_and_block_model'))
    )
    op.create_index(op.f('ix_user_and_block_model_id'), 'user_and_block_model', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_and_block_model_id'), table_name='user_and_block_model')
    op.drop_table('user_and_block_model')
    op.drop_index(op.f('ix_answers_id'), table_name='answers')
    op.drop_table('answers')
    op.drop_index(op.f('ix_blocks_id'), table_name='blocks')
    op.drop_table('blocks')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_levels_id'), table_name='levels')
    op.drop_table('levels')
    # ### end Alembic commands ###
